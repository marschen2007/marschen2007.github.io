{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/IMG_4766.JPG","path":"images/IMG_4766.JPG","modified":0,"renderable":0},{"_id":"themes/onenote/source/css/a11y-dark.min.css","path":"css/a11y-dark.min.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/css/custom.css","path":"css/custom.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/css/markdown.css","path":"css/markdown.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/css/reset.css","path":"css/reset.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/img/Snipaste_2024-06-20_22-44-31.png","path":"img/Snipaste_2024-06-20_22-44-31.png","modified":0,"renderable":1},{"_id":"themes/onenote/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/onenote/source/img/screen.jpg","path":"img/screen.jpg","modified":0,"renderable":1},{"_id":"themes/onenote/source/js/copy-code.js","path":"js/copy-code.js","modified":0,"renderable":1},{"_id":"themes/onenote/source/js/highlight.min.js","path":"js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/onenote/source/js/highlightjs-line-numbers.js","path":"js/highlightjs-line-numbers.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"23c324b15c07b554cbf6eb0658a34aef7ec90520","modified":1742788047028},{"_id":"source/CNAME","hash":"f4d751edac0e1c0c96882d1ab1e0d1652e83f6e3","modified":1742787934241},{"_id":"source/_posts/視角切換.md","hash":"2701f3819d79b761a9d595e3f0a8233321fb4ebc","modified":1742651403104},{"_id":"themes/onenote/.gitignore","hash":"0ca5ec8351895abf2d95b8940eff6c32761c29e3","modified":1742643481415},{"_id":"themes/onenote/README.md","hash":"ae62a5cb014930965f49e906afe520f9b59b1314","modified":1742643481415},{"_id":"themes/onenote/layout/archive.ejs","hash":"4cdab7333c2b8ee8344721c879f1f88f4a3b03fc","modified":1742643481416},{"_id":"themes/onenote/layout/layout.ejs","hash":"8ccdc9224edfbaf7e611f6984027f7aa7612fbf7","modified":1742643481417},{"_id":"themes/onenote/layout/about.ejs","hash":"649bf3ce56ab648d6d7d8f9c725908d6e1f00e64","modified":1742644123961},{"_id":"themes/onenote/layout/post.ejs","hash":"1a26bae03f03982dea31352dd3f4d85585b53749","modified":1742643481417},{"_id":"themes/onenote/_config.yml","hash":"b7c9d65c08c16bff4a97bc0e666fa5ef71463ae3","modified":1742644949180},{"_id":"themes/onenote/layout/_partial/footer.ejs","hash":"613eb619e3a5b364802f5d71a5054343db5668e9","modified":1742643481416},{"_id":"themes/onenote/layout/index.ejs","hash":"57ca1ad7dfc84bdc14f9c46cfa9e7fb909648d00","modified":1742643481417},{"_id":"themes/onenote/layout/_partial/header.ejs","hash":"2b54259f35942eeb1b99482c2a4517152fc87f0c","modified":1742643481416},{"_id":"themes/onenote/source/css/a11y-dark.min.css","hash":"a6e7bdebb44451581cef94bf8ab7105fe15229f4","modified":1742643481417},{"_id":"themes/onenote/layout/_partial/paginator.ejs","hash":"980bf0a0be798c19df4b0827aa4b90b35c872425","modified":1742643481416},{"_id":"themes/onenote/layout/_partial/post-header.ejs","hash":"973592aadfa0cc074cacb1f18a0dcce6ffdb8443","modified":1742643481416},{"_id":"themes/onenote/source/css/markdown.css","hash":"897483b337512083a546668e81de3695e03c705b","modified":1742643481417},{"_id":"themes/onenote/source/css/reset.css","hash":"9601833a94a0d2b95dbf2ba80e84b1b200080c61","modified":1742643481417},{"_id":"themes/onenote/source/css/custom.css","hash":"dfefce4e490ebfb86eb16ec62f3e9cc4b0ce6a4a","modified":1742643481417},{"_id":"themes/onenote/layout/_partial/head.ejs","hash":"82b3127fcbb554a2621b92c97c5554ebdeb91b1c","modified":1742643481416},{"_id":"themes/onenote/layout/page.ejs","hash":"83315421969918789223a6afd4a97110df7a6fb5","modified":1742644221402},{"_id":"themes/onenote/source/css/style.css","hash":"1142026b6f203253952d693ee52fc11c151fe0da","modified":1742643481418},{"_id":"themes/onenote/source/img/favicon.png","hash":"0845678601e8b144ae45c448a25650f4d3d2182d","modified":1742643481418},{"_id":"themes/onenote/source/js/copy-code.js","hash":"d51eac36afc5290952fb134f9c0aa92fd5a1c6be","modified":1742643481421},{"_id":"themes/onenote/source/js/highlightjs-line-numbers.js","hash":"690e96133591495fa847d828573bd0576b2d168a","modified":1742643481422},{"_id":"themes/onenote/source/img/Snipaste_2024-06-20_22-44-31.png","hash":"b7f605ba9689934b8a3d3125f57a5e1aa5e13b98","modified":1742643481418},{"_id":"themes/onenote/source/js/highlight.min.js","hash":"d264ad16bdf39cfec2b06c20223b87fcb37ad27b","modified":1742643481421},{"_id":"source/images/IMG_4766.JPG","hash":"721a53c0dd749d49d0d9be7339ccf37c3ba4cb1e","modified":1742642295809},{"_id":"themes/onenote/source/img/screen.jpg","hash":"2804ea52a64f2e2faaeb44cbf010eb0c2f842455","modified":1742643481420},{"_id":"public/about/index.html","hash":"80e019399e0934ee93911483693bfca0f73bfd2c","modified":1742788205197},{"_id":"public/2025/03/22/視角切換/index.html","hash":"05b8fb67543937eaaf1a7635df2bddc8a8315740","modified":1742788205197},{"_id":"public/archives/index.html","hash":"e973d1449d61e233da413cc67ffd5978f1df2e28","modified":1742788205197},{"_id":"public/archives/2025/index.html","hash":"e973d1449d61e233da413cc67ffd5978f1df2e28","modified":1742788205197},{"_id":"public/archives/2025/03/index.html","hash":"e973d1449d61e233da413cc67ffd5978f1df2e28","modified":1742788205197},{"_id":"public/index.html","hash":"0cc3c52ea8752678ea5b9d4a615275f2efb3c050","modified":1742788205197},{"_id":"public/CNAME","hash":"f4d751edac0e1c0c96882d1ab1e0d1652e83f6e3","modified":1742788205197},{"_id":"public/img/favicon.png","hash":"0845678601e8b144ae45c448a25650f4d3d2182d","modified":1742788205197},{"_id":"public/img/Snipaste_2024-06-20_22-44-31.png","hash":"b7f605ba9689934b8a3d3125f57a5e1aa5e13b98","modified":1742788205197},{"_id":"public/css/custom.css","hash":"dfefce4e490ebfb86eb16ec62f3e9cc4b0ce6a4a","modified":1742788205197},{"_id":"public/css/a11y-dark.min.css","hash":"a6e7bdebb44451581cef94bf8ab7105fe15229f4","modified":1742788205197},{"_id":"public/css/reset.css","hash":"9601833a94a0d2b95dbf2ba80e84b1b200080c61","modified":1742788205197},{"_id":"public/css/style.css","hash":"1142026b6f203253952d693ee52fc11c151fe0da","modified":1742788205197},{"_id":"public/css/markdown.css","hash":"897483b337512083a546668e81de3695e03c705b","modified":1742788205197},{"_id":"public/js/copy-code.js","hash":"d51eac36afc5290952fb134f9c0aa92fd5a1c6be","modified":1742788205197},{"_id":"public/js/highlightjs-line-numbers.js","hash":"690e96133591495fa847d828573bd0576b2d168a","modified":1742788205197},{"_id":"public/js/highlight.min.js","hash":"d264ad16bdf39cfec2b06c20223b87fcb37ad27b","modified":1742788205197},{"_id":"public/images/IMG_4766.JPG","hash":"721a53c0dd749d49d0d9be7339ccf37c3ba4cb1e","modified":1742788205197},{"_id":"public/img/screen.jpg","hash":"2804ea52a64f2e2faaeb44cbf010eb0c2f842455","modified":1742788205197},{"_id":"source/_posts/資訊安全／IT行業不只是程式設計師：從職場實務談技能誤區與學習路線.md","hash":"e012f5244a2f3d2287c93fa25e7ef144980705c1","modified":1744628571226}],"Category":[],"Data":[],"Page":[{"title":"About","date":"2025-03-22T11:42:44.000Z","layout":"page","_content":"routing guy(not switching) hierarchical L3 not L2 for sure L7 is not networking at all once programmer not sysadm app/L7 for living now 終究是網路咖\nRead, read, read. Read everything—trash, classics, good and bad, and see how they do it. Just like a carpenter who works as an apprentice and studies the master. Read! You'll absorb it. Opinions Are My Own\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2025-03-22 19:42:44\nlayout: page\n---\nrouting guy(not switching) hierarchical L3 not L2 for sure L7 is not networking at all once programmer not sysadm app/L7 for living now 終究是網路咖\nRead, read, read. Read everything—trash, classics, good and bad, and see how they do it. Just like a carpenter who works as an apprentice and studies the master. Read! You'll absorb it. Opinions Are My Own\n","updated":"2025-03-24T03:47:27.028Z","path":"about/index.html","comments":1,"_id":"cm8mj3lmr0000k8rqedhueyda","content":"<p>routing guy(not switching) hierarchical L3 not L2 for sure L7 is not networking at all once programmer not sysadm app&#x2F;L7 for living now 終究是網路咖<br>Read, read, read. Read everything—trash, classics, good and bad, and see how they do it. Just like a carpenter who works as an apprentice and studies the master. Read! You’ll absorb it. Opinions Are My Own</p>\n","excerpt":"","more":"<p>routing guy(not switching) hierarchical L3 not L2 for sure L7 is not networking at all once programmer not sysadm app&#x2F;L7 for living now 終究是網路咖<br>Read, read, read. Read everything—trash, classics, good and bad, and see how they do it. Just like a carpenter who works as an apprentice and studies the master. Read! You’ll absorb it. Opinions Are My Own</p>\n"}],"Post":[{"title":"視角切換","date":"2025-03-22T13:09:50.000Z","_content":"AI 編程的真正價值：回到宏觀視角，讓開發變得更輕鬆\n在 AI 編程越來越普及的今天，我漸漸發現一個有趣的現象：\nAI 並不總是讓你寫得更快，也不一定能直接提升程式碼品質，但它卻讓我覺得「寫程式變得比較輕鬆了」。這種輕鬆感，甚至會讓人對開發工作重新燃起熱情，彷彿整個職業生命又延長了十年。\n那為什麼會這樣？我認為答案是：AI 編程讓開發者能夠長時間停留在宏觀視角，減少了視角切換帶來的心智負擔。\n\n# 視角切換，是開發中最耗神的事\n程式設計的過程，本質上需要開發者不斷在兩種思維模式間切換：\n* 宏觀視角：功能設計、模組結構、風格統一、架構演進。\n* 微觀視角：每一行程式碼的邏輯正確性、變數命名、bug 排查、參數傳遞。\n一個優秀的開發者，必須學會在這兩者之間快速切換，像是工程師與藝術家的雙重身份。但問題是：這種切換是非常耗費心智資源的，尤其是在專案趕進度的壓力下，時間有限、問題接踵而至，大腦往往無法應付如此高頻的轉換。\n很多時候，我們的疲憊並不是因為 coding 太久，而是因為不斷地在這兩種視角中跳來跳去，還得隨時切換思維模式、清理上下文、重建背景資訊。這些才是真正讓人「心累」的根源。\n\nAI 編程：讓你專注當設計師，而不是苦工\nAI 的出現，最根本的改變是：\n你可以長時間維持在宏觀視角，將繁瑣的細節交給 AI 處理。\n例如，以前做重構要細細考慮每個參數、每個函式名稱的變更、依賴關係的連動；現在你只需要說明你的重構意圖，AI 就可以幫你初步實作，甚至搭配簡單的測試邏輯。\n你像是一位建築師，只需畫出藍圖，AI 就像施工團隊，把細節處理好交給你確認。過程中，你不再需要從設計師身份跳回搬磚工，每一次的專注都能更持久、更深入。\n\n三個轉變，降低心智負擔\n使用 AI 編程，會帶來以下三個明顯的轉變：\n1. 降低認知切換成本：不用被小 bug 拉回去死磕，思路不中斷，大腦保持高階運作。\n2. 從苦工到創作：專注於設計與創意，讓你更像一位產品設計師，而不是 bug 修補工。\n3. 情緒與效率雙提升：少了焦躁與疲憊，更容易進入心流，持續保持產出與愉悅感。\n這不只是一種效率的提升，而是一種「編程心態」的改變。你不再是被需求追著跑的工人，而是主動駕馭全局的創作者。\n\n結語：AI 延長了開發者的黃金歲月\nAI 編程不是取代人類，而是讓我們重新找回「寫程式的樂趣」，減輕心智負擔，保持創造力和專注力。這是一種心理層面的釋放，也是一種專業壽命的延續。\n在這個變化快速的時代，開發者的核心價值已經不只是會寫程式，而是能不能站穩宏觀視角，讓 AI 成為你最強的副駕。\n願每一位開發者，都能用 AI 讓自己再寫十年，還是那麼熱愛技術、熱愛創造。\n","source":"_posts/視角切換.md","raw":"---\ntitle: 視角切換\ndate: 2025-03-22 21:09:50\ntags:\n---\nAI 編程的真正價值：回到宏觀視角，讓開發變得更輕鬆\n在 AI 編程越來越普及的今天，我漸漸發現一個有趣的現象：\nAI 並不總是讓你寫得更快，也不一定能直接提升程式碼品質，但它卻讓我覺得「寫程式變得比較輕鬆了」。這種輕鬆感，甚至會讓人對開發工作重新燃起熱情，彷彿整個職業生命又延長了十年。\n那為什麼會這樣？我認為答案是：AI 編程讓開發者能夠長時間停留在宏觀視角，減少了視角切換帶來的心智負擔。\n\n# 視角切換，是開發中最耗神的事\n程式設計的過程，本質上需要開發者不斷在兩種思維模式間切換：\n* 宏觀視角：功能設計、模組結構、風格統一、架構演進。\n* 微觀視角：每一行程式碼的邏輯正確性、變數命名、bug 排查、參數傳遞。\n一個優秀的開發者，必須學會在這兩者之間快速切換，像是工程師與藝術家的雙重身份。但問題是：這種切換是非常耗費心智資源的，尤其是在專案趕進度的壓力下，時間有限、問題接踵而至，大腦往往無法應付如此高頻的轉換。\n很多時候，我們的疲憊並不是因為 coding 太久，而是因為不斷地在這兩種視角中跳來跳去，還得隨時切換思維模式、清理上下文、重建背景資訊。這些才是真正讓人「心累」的根源。\n\nAI 編程：讓你專注當設計師，而不是苦工\nAI 的出現，最根本的改變是：\n你可以長時間維持在宏觀視角，將繁瑣的細節交給 AI 處理。\n例如，以前做重構要細細考慮每個參數、每個函式名稱的變更、依賴關係的連動；現在你只需要說明你的重構意圖，AI 就可以幫你初步實作，甚至搭配簡單的測試邏輯。\n你像是一位建築師，只需畫出藍圖，AI 就像施工團隊，把細節處理好交給你確認。過程中，你不再需要從設計師身份跳回搬磚工，每一次的專注都能更持久、更深入。\n\n三個轉變，降低心智負擔\n使用 AI 編程，會帶來以下三個明顯的轉變：\n1. 降低認知切換成本：不用被小 bug 拉回去死磕，思路不中斷，大腦保持高階運作。\n2. 從苦工到創作：專注於設計與創意，讓你更像一位產品設計師，而不是 bug 修補工。\n3. 情緒與效率雙提升：少了焦躁與疲憊，更容易進入心流，持續保持產出與愉悅感。\n這不只是一種效率的提升，而是一種「編程心態」的改變。你不再是被需求追著跑的工人，而是主動駕馭全局的創作者。\n\n結語：AI 延長了開發者的黃金歲月\nAI 編程不是取代人類，而是讓我們重新找回「寫程式的樂趣」，減輕心智負擔，保持創造力和專注力。這是一種心理層面的釋放，也是一種專業壽命的延續。\n在這個變化快速的時代，開發者的核心價值已經不只是會寫程式，而是能不能站穩宏觀視角，讓 AI 成為你最強的副駕。\n願每一位開發者，都能用 AI 讓自己再寫十年，還是那麼熱愛技術、熱愛創造。\n","slug":"視角切換","published":1,"updated":"2025-03-22T13:50:03.104Z","comments":1,"layout":"post","photos":[],"_id":"cm8mj3lms0001k8rq6lehhojw","content":"<p>AI 編程的真正價值：回到宏觀視角，讓開發變得更輕鬆<br>在 AI 編程越來越普及的今天，我漸漸發現一個有趣的現象：<br>AI 並不總是讓你寫得更快，也不一定能直接提升程式碼品質，但它卻讓我覺得「寫程式變得比較輕鬆了」。這種輕鬆感，甚至會讓人對開發工作重新燃起熱情，彷彿整個職業生命又延長了十年。<br>那為什麼會這樣？我認為答案是：AI 編程讓開發者能夠長時間停留在宏觀視角，減少了視角切換帶來的心智負擔。</p>\n<h1 id=\"視角切換，是開發中最耗神的事\"><a href=\"#視角切換，是開發中最耗神的事\" class=\"headerlink\" title=\"視角切換，是開發中最耗神的事\"></a>視角切換，是開發中最耗神的事</h1><p>程式設計的過程，本質上需要開發者不斷在兩種思維模式間切換：</p>\n<ul>\n<li>宏觀視角：功能設計、模組結構、風格統一、架構演進。</li>\n<li>微觀視角：每一行程式碼的邏輯正確性、變數命名、bug 排查、參數傳遞。<br>一個優秀的開發者，必須學會在這兩者之間快速切換，像是工程師與藝術家的雙重身份。但問題是：這種切換是非常耗費心智資源的，尤其是在專案趕進度的壓力下，時間有限、問題接踵而至，大腦往往無法應付如此高頻的轉換。<br>很多時候，我們的疲憊並不是因為 coding 太久，而是因為不斷地在這兩種視角中跳來跳去，還得隨時切換思維模式、清理上下文、重建背景資訊。這些才是真正讓人「心累」的根源。</li>\n</ul>\n<p>AI 編程：讓你專注當設計師，而不是苦工<br>AI 的出現，最根本的改變是：<br>你可以長時間維持在宏觀視角，將繁瑣的細節交給 AI 處理。<br>例如，以前做重構要細細考慮每個參數、每個函式名稱的變更、依賴關係的連動；現在你只需要說明你的重構意圖，AI 就可以幫你初步實作，甚至搭配簡單的測試邏輯。<br>你像是一位建築師，只需畫出藍圖，AI 就像施工團隊，把細節處理好交給你確認。過程中，你不再需要從設計師身份跳回搬磚工，每一次的專注都能更持久、更深入。</p>\n<p>三個轉變，降低心智負擔<br>使用 AI 編程，會帶來以下三個明顯的轉變：</p>\n<ol>\n<li>降低認知切換成本：不用被小 bug 拉回去死磕，思路不中斷，大腦保持高階運作。</li>\n<li>從苦工到創作：專注於設計與創意，讓你更像一位產品設計師，而不是 bug 修補工。</li>\n<li>情緒與效率雙提升：少了焦躁與疲憊，更容易進入心流，持續保持產出與愉悅感。<br>這不只是一種效率的提升，而是一種「編程心態」的改變。你不再是被需求追著跑的工人，而是主動駕馭全局的創作者。</li>\n</ol>\n<p>結語：AI 延長了開發者的黃金歲月<br>AI 編程不是取代人類，而是讓我們重新找回「寫程式的樂趣」，減輕心智負擔，保持創造力和專注力。這是一種心理層面的釋放，也是一種專業壽命的延續。<br>在這個變化快速的時代，開發者的核心價值已經不只是會寫程式，而是能不能站穩宏觀視角，讓 AI 成為你最強的副駕。<br>願每一位開發者，都能用 AI 讓自己再寫十年，還是那麼熱愛技術、熱愛創造。</p>\n","excerpt":"","more":"<p>AI 編程的真正價值：回到宏觀視角，讓開發變得更輕鬆<br>在 AI 編程越來越普及的今天，我漸漸發現一個有趣的現象：<br>AI 並不總是讓你寫得更快，也不一定能直接提升程式碼品質，但它卻讓我覺得「寫程式變得比較輕鬆了」。這種輕鬆感，甚至會讓人對開發工作重新燃起熱情，彷彿整個職業生命又延長了十年。<br>那為什麼會這樣？我認為答案是：AI 編程讓開發者能夠長時間停留在宏觀視角，減少了視角切換帶來的心智負擔。</p>\n<h1 id=\"視角切換，是開發中最耗神的事\"><a href=\"#視角切換，是開發中最耗神的事\" class=\"headerlink\" title=\"視角切換，是開發中最耗神的事\"></a>視角切換，是開發中最耗神的事</h1><p>程式設計的過程，本質上需要開發者不斷在兩種思維模式間切換：</p>\n<ul>\n<li>宏觀視角：功能設計、模組結構、風格統一、架構演進。</li>\n<li>微觀視角：每一行程式碼的邏輯正確性、變數命名、bug 排查、參數傳遞。<br>一個優秀的開發者，必須學會在這兩者之間快速切換，像是工程師與藝術家的雙重身份。但問題是：這種切換是非常耗費心智資源的，尤其是在專案趕進度的壓力下，時間有限、問題接踵而至，大腦往往無法應付如此高頻的轉換。<br>很多時候，我們的疲憊並不是因為 coding 太久，而是因為不斷地在這兩種視角中跳來跳去，還得隨時切換思維模式、清理上下文、重建背景資訊。這些才是真正讓人「心累」的根源。</li>\n</ul>\n<p>AI 編程：讓你專注當設計師，而不是苦工<br>AI 的出現，最根本的改變是：<br>你可以長時間維持在宏觀視角，將繁瑣的細節交給 AI 處理。<br>例如，以前做重構要細細考慮每個參數、每個函式名稱的變更、依賴關係的連動；現在你只需要說明你的重構意圖，AI 就可以幫你初步實作，甚至搭配簡單的測試邏輯。<br>你像是一位建築師，只需畫出藍圖，AI 就像施工團隊，把細節處理好交給你確認。過程中，你不再需要從設計師身份跳回搬磚工，每一次的專注都能更持久、更深入。</p>\n<p>三個轉變，降低心智負擔<br>使用 AI 編程，會帶來以下三個明顯的轉變：</p>\n<ol>\n<li>降低認知切換成本：不用被小 bug 拉回去死磕，思路不中斷，大腦保持高階運作。</li>\n<li>從苦工到創作：專注於設計與創意，讓你更像一位產品設計師，而不是 bug 修補工。</li>\n<li>情緒與效率雙提升：少了焦躁與疲憊，更容易進入心流，持續保持產出與愉悅感。<br>這不只是一種效率的提升，而是一種「編程心態」的改變。你不再是被需求追著跑的工人，而是主動駕馭全局的創作者。</li>\n</ol>\n<p>結語：AI 延長了開發者的黃金歲月<br>AI 編程不是取代人類，而是讓我們重新找回「寫程式的樂趣」，減輕心智負擔，保持創造力和專注力。這是一種心理層面的釋放，也是一種專業壽命的延續。<br>在這個變化快速的時代，開發者的核心價值已經不只是會寫程式，而是能不能站穩宏觀視角，讓 AI 成為你最強的副駕。<br>願每一位開發者，都能用 AI 讓自己再寫十年，還是那麼熱愛技術、熱愛創造。</p>\n"},{"title":"資訊安全／IT行業不只是程式設計師：從職場實務談技能誤區與學習路線","date":"2025-04-14T11:01:00.000Z","_content":"\n# 資訊安全／IT 行業不只是程式設計師：從職場實務談技能誤區與學習路線\n\n當你打開 Twitter 或其他技術社群媒體時，會發現整個 IT 世界幾乎被「程式設計師」主導。不論是學習 Python、刷 Leetcode、比較框架效能、談職涯發展，整個風向都讓人誤以為：\n\n> 只要進入 IT 行業，你的未來就是 coding、coding、再 coding。\n\n但這其實是一個非常狹隘的理解，特別是在資訊安全（Cybersecurity）或系統工程等領域。作為長年在這產業裡工作的人，我想談談：**真正的 IT 現場，跟網路想像的差異，以及我們該怎麼規劃自己的學習與成長路線。**\n\n---\n\n## 1. IT 行業 ≠ 程式設計師\n\n程式設計師當然是重要的一環，但整個資訊領域遠比寫程式廣得多。\n\n特別是在**資訊安全**領域，你可能會從事的工作包括：\n\n- 分析威脅情資（Threat Intelligence）\n- 操作 SIEM 工具進行事件調查\n- 管理與配置雲端安全防護\n- 進行資安稽核與合規評估\n- 統整企業風險、制訂防護政策\n- 設計防禦架構與攻擊模擬\n\n這些工作需要你具備技術知識沒錯，但更多時候，**你扮演的是決策者、分析師、協調者，而不是每天敲 code 的開發者**。\n\n---\n\n## 2. 技術能力的重點：廣度為主，深度依職責\n\n資訊安全領域的「技術」要求，往往不是鑽研到作業系統核心，而是掌握足夠的理解來分析、判斷、設計防護機制。\n\n你可能需要會：\n\n- 讀懂封包，使用 Wireshark 分析異常\n- 了解基本 Linux 操作與權限管理\n- 撰寫簡單的 Python 腳本進行自動化\n- 執行 SQL 查詢找出資料異常\n\n這些技術是「手能動」、「腦能轉」、「系統能看懂」的技能，不是要你寫出一套完整產品。因此，**技術要實用，要能連接你的分析與解決問題的能力。**\n\n---\n\n## 3. 真正的關鍵能力：系統思維與整合判斷\n\n一個好的資安人才，最寶貴的能力往往是：\n\n- 快速學習與跨領域整合\n- 看得懂風險如何影響業務流程\n- 能把技術、流程、政策、人員串起來\n- 有強烈的 curiosity：為什麼這樣設計？有沒有漏洞？能不能優化？\n\n這些能力的核心，其實是**系統性思考（systems thinking）**，是能「從上而下」理解整個環境、再用適當的技術工具切入問題解決。\n\n---\n\n## 4. 你不需要資訊本科，但你需要明確的學習策略\n\n我常聽到人說：「我不是資工本科，沒辦法學資訊。」這種觀念早就落伍。\n\n今天的世界充滿了開放資源：\n\n- MIT、Stanford 都公開課程\n- 有 AI 工具可以輔助學習、解釋程式碼\n- 有 Coursera、edX、YouTube 上的完整課程與實作教學\n- 有像 Google Cybersecurity Certificate 這種專為初學者設計的路徑\n\n你完全可以根據自己的目標，打造一條屬於你自己的「現代資訊本科」學習路線圖。**現在不是資訊科學門檻太高，而是你是否知道自己要什麼。**\n\n---\n\n## 5. 真正的挑戰：動機與持續學習的意願\n\n但就算工具與資源再多，如果你沒有明確動機，一切都只是起個頭，然後不了了之。\n\n這也是我觀察到很多人在進入學習狀態時遇到的問題：不是能力不夠，而是**無法連接「我為什麼要學」這件事**。\n\n學資訊，學科技，不只是為了職業收入，更是為了你能夠：\n\n- 更有掌控力地理解這個數位世界\n- 創造你想要的解決方案\n- 在 AI 與自動化橫掃的時代中，保有競爭力與獨立性\n\n---\n\n## 結語：請不要被錯誤的框架限制住\n\n如果你正考慮是否要走入資訊安全或 IT 領域，請不要被網路上單一形象嚇退。這個產業廣闊多元，**不是每個人都要當工程師或寫出下一個 app 才有價值**。\n\n你需要的是：\n\n- 足夠的動手能力\n- 開放的學習心態\n- 明確的目標與方向感\n- 持續理解這個世界如何運作的熱情\n\n而這些，其實沒有本科限定、年齡限制、職位限制。\n\n---\n\n這是一場學習與轉型的長跑，不是速成競賽。\n","source":"_posts/資訊安全／IT行業不只是程式設計師：從職場實務談技能誤區與學習路線.md","raw":"---\ntitle: 資訊安全／IT行業不只是程式設計師：從職場實務談技能誤區與學習路線\ndate: 2025-04-14 19:01:00\ntags:\n  - 資訊安全\n  - 職涯發展\n  - 技術學習\n  - 自學\n---\n\n# 資訊安全／IT 行業不只是程式設計師：從職場實務談技能誤區與學習路線\n\n當你打開 Twitter 或其他技術社群媒體時，會發現整個 IT 世界幾乎被「程式設計師」主導。不論是學習 Python、刷 Leetcode、比較框架效能、談職涯發展，整個風向都讓人誤以為：\n\n> 只要進入 IT 行業，你的未來就是 coding、coding、再 coding。\n\n但這其實是一個非常狹隘的理解，特別是在資訊安全（Cybersecurity）或系統工程等領域。作為長年在這產業裡工作的人，我想談談：**真正的 IT 現場，跟網路想像的差異，以及我們該怎麼規劃自己的學習與成長路線。**\n\n---\n\n## 1. IT 行業 ≠ 程式設計師\n\n程式設計師當然是重要的一環，但整個資訊領域遠比寫程式廣得多。\n\n特別是在**資訊安全**領域，你可能會從事的工作包括：\n\n- 分析威脅情資（Threat Intelligence）\n- 操作 SIEM 工具進行事件調查\n- 管理與配置雲端安全防護\n- 進行資安稽核與合規評估\n- 統整企業風險、制訂防護政策\n- 設計防禦架構與攻擊模擬\n\n這些工作需要你具備技術知識沒錯，但更多時候，**你扮演的是決策者、分析師、協調者，而不是每天敲 code 的開發者**。\n\n---\n\n## 2. 技術能力的重點：廣度為主，深度依職責\n\n資訊安全領域的「技術」要求，往往不是鑽研到作業系統核心，而是掌握足夠的理解來分析、判斷、設計防護機制。\n\n你可能需要會：\n\n- 讀懂封包，使用 Wireshark 分析異常\n- 了解基本 Linux 操作與權限管理\n- 撰寫簡單的 Python 腳本進行自動化\n- 執行 SQL 查詢找出資料異常\n\n這些技術是「手能動」、「腦能轉」、「系統能看懂」的技能，不是要你寫出一套完整產品。因此，**技術要實用，要能連接你的分析與解決問題的能力。**\n\n---\n\n## 3. 真正的關鍵能力：系統思維與整合判斷\n\n一個好的資安人才，最寶貴的能力往往是：\n\n- 快速學習與跨領域整合\n- 看得懂風險如何影響業務流程\n- 能把技術、流程、政策、人員串起來\n- 有強烈的 curiosity：為什麼這樣設計？有沒有漏洞？能不能優化？\n\n這些能力的核心，其實是**系統性思考（systems thinking）**，是能「從上而下」理解整個環境、再用適當的技術工具切入問題解決。\n\n---\n\n## 4. 你不需要資訊本科，但你需要明確的學習策略\n\n我常聽到人說：「我不是資工本科，沒辦法學資訊。」這種觀念早就落伍。\n\n今天的世界充滿了開放資源：\n\n- MIT、Stanford 都公開課程\n- 有 AI 工具可以輔助學習、解釋程式碼\n- 有 Coursera、edX、YouTube 上的完整課程與實作教學\n- 有像 Google Cybersecurity Certificate 這種專為初學者設計的路徑\n\n你完全可以根據自己的目標，打造一條屬於你自己的「現代資訊本科」學習路線圖。**現在不是資訊科學門檻太高，而是你是否知道自己要什麼。**\n\n---\n\n## 5. 真正的挑戰：動機與持續學習的意願\n\n但就算工具與資源再多，如果你沒有明確動機，一切都只是起個頭，然後不了了之。\n\n這也是我觀察到很多人在進入學習狀態時遇到的問題：不是能力不夠，而是**無法連接「我為什麼要學」這件事**。\n\n學資訊，學科技，不只是為了職業收入，更是為了你能夠：\n\n- 更有掌控力地理解這個數位世界\n- 創造你想要的解決方案\n- 在 AI 與自動化橫掃的時代中，保有競爭力與獨立性\n\n---\n\n## 結語：請不要被錯誤的框架限制住\n\n如果你正考慮是否要走入資訊安全或 IT 領域，請不要被網路上單一形象嚇退。這個產業廣闊多元，**不是每個人都要當工程師或寫出下一個 app 才有價值**。\n\n你需要的是：\n\n- 足夠的動手能力\n- 開放的學習心態\n- 明確的目標與方向感\n- 持續理解這個世界如何運作的熱情\n\n而這些，其實沒有本科限定、年齡限制、職位限制。\n\n---\n\n這是一場學習與轉型的長跑，不是速成競賽。\n","slug":"資訊安全／IT行業不只是程式設計師：從職場實務談技能誤區與學習路線","published":1,"updated":"2025-04-14T11:02:51.226Z","comments":1,"layout":"post","photos":[],"_id":"cm9gytonp0000bzrq26ikh2ku","content":"<h1 id=\"資訊安全／IT-行業不只是程式設計師：從職場實務談技能誤區與學習路線\"><a href=\"#資訊安全／IT-行業不只是程式設計師：從職場實務談技能誤區與學習路線\" class=\"headerlink\" title=\"資訊安全／IT 行業不只是程式設計師：從職場實務談技能誤區與學習路線\"></a>資訊安全／IT 行業不只是程式設計師：從職場實務談技能誤區與學習路線</h1><p>當你打開 Twitter 或其他技術社群媒體時，會發現整個 IT 世界幾乎被「程式設計師」主導。不論是學習 Python、刷 Leetcode、比較框架效能、談職涯發展，整個風向都讓人誤以為：</p>\n<blockquote>\n<p>只要進入 IT 行業，你的未來就是 coding、coding、再 coding。</p>\n</blockquote>\n<p>但這其實是一個非常狹隘的理解，特別是在資訊安全（Cybersecurity）或系統工程等領域。作為長年在這產業裡工作的人，我想談談：<strong>真正的 IT 現場，跟網路想像的差異，以及我們該怎麼規劃自己的學習與成長路線。</strong></p>\n<hr>\n<h2 id=\"1-IT-行業-≠-程式設計師\"><a href=\"#1-IT-行業-≠-程式設計師\" class=\"headerlink\" title=\"1. IT 行業 ≠ 程式設計師\"></a>1. IT 行業 ≠ 程式設計師</h2><p>程式設計師當然是重要的一環，但整個資訊領域遠比寫程式廣得多。</p>\n<p>特別是在<strong>資訊安全</strong>領域，你可能會從事的工作包括：</p>\n<ul>\n<li>分析威脅情資（Threat Intelligence）</li>\n<li>操作 SIEM 工具進行事件調查</li>\n<li>管理與配置雲端安全防護</li>\n<li>進行資安稽核與合規評估</li>\n<li>統整企業風險、制訂防護政策</li>\n<li>設計防禦架構與攻擊模擬</li>\n</ul>\n<p>這些工作需要你具備技術知識沒錯，但更多時候，<strong>你扮演的是決策者、分析師、協調者，而不是每天敲 code 的開發者</strong>。</p>\n<hr>\n<h2 id=\"2-技術能力的重點：廣度為主，深度依職責\"><a href=\"#2-技術能力的重點：廣度為主，深度依職責\" class=\"headerlink\" title=\"2. 技術能力的重點：廣度為主，深度依職責\"></a>2. 技術能力的重點：廣度為主，深度依職責</h2><p>資訊安全領域的「技術」要求，往往不是鑽研到作業系統核心，而是掌握足夠的理解來分析、判斷、設計防護機制。</p>\n<p>你可能需要會：</p>\n<ul>\n<li>讀懂封包，使用 Wireshark 分析異常</li>\n<li>了解基本 Linux 操作與權限管理</li>\n<li>撰寫簡單的 Python 腳本進行自動化</li>\n<li>執行 SQL 查詢找出資料異常</li>\n</ul>\n<p>這些技術是「手能動」、「腦能轉」、「系統能看懂」的技能，不是要你寫出一套完整產品。因此，<strong>技術要實用，要能連接你的分析與解決問題的能力。</strong></p>\n<hr>\n<h2 id=\"3-真正的關鍵能力：系統思維與整合判斷\"><a href=\"#3-真正的關鍵能力：系統思維與整合判斷\" class=\"headerlink\" title=\"3. 真正的關鍵能力：系統思維與整合判斷\"></a>3. 真正的關鍵能力：系統思維與整合判斷</h2><p>一個好的資安人才，最寶貴的能力往往是：</p>\n<ul>\n<li>快速學習與跨領域整合</li>\n<li>看得懂風險如何影響業務流程</li>\n<li>能把技術、流程、政策、人員串起來</li>\n<li>有強烈的 curiosity：為什麼這樣設計？有沒有漏洞？能不能優化？</li>\n</ul>\n<p>這些能力的核心，其實是<strong>系統性思考（systems thinking）</strong>，是能「從上而下」理解整個環境、再用適當的技術工具切入問題解決。</p>\n<hr>\n<h2 id=\"4-你不需要資訊本科，但你需要明確的學習策略\"><a href=\"#4-你不需要資訊本科，但你需要明確的學習策略\" class=\"headerlink\" title=\"4. 你不需要資訊本科，但你需要明確的學習策略\"></a>4. 你不需要資訊本科，但你需要明確的學習策略</h2><p>我常聽到人說：「我不是資工本科，沒辦法學資訊。」這種觀念早就落伍。</p>\n<p>今天的世界充滿了開放資源：</p>\n<ul>\n<li>MIT、Stanford 都公開課程</li>\n<li>有 AI 工具可以輔助學習、解釋程式碼</li>\n<li>有 Coursera、edX、YouTube 上的完整課程與實作教學</li>\n<li>有像 Google Cybersecurity Certificate 這種專為初學者設計的路徑</li>\n</ul>\n<p>你完全可以根據自己的目標，打造一條屬於你自己的「現代資訊本科」學習路線圖。<strong>現在不是資訊科學門檻太高，而是你是否知道自己要什麼。</strong></p>\n<hr>\n<h2 id=\"5-真正的挑戰：動機與持續學習的意願\"><a href=\"#5-真正的挑戰：動機與持續學習的意願\" class=\"headerlink\" title=\"5. 真正的挑戰：動機與持續學習的意願\"></a>5. 真正的挑戰：動機與持續學習的意願</h2><p>但就算工具與資源再多，如果你沒有明確動機，一切都只是起個頭，然後不了了之。</p>\n<p>這也是我觀察到很多人在進入學習狀態時遇到的問題：不是能力不夠，而是<strong>無法連接「我為什麼要學」這件事</strong>。</p>\n<p>學資訊，學科技，不只是為了職業收入，更是為了你能夠：</p>\n<ul>\n<li>更有掌控力地理解這個數位世界</li>\n<li>創造你想要的解決方案</li>\n<li>在 AI 與自動化橫掃的時代中，保有競爭力與獨立性</li>\n</ul>\n<hr>\n<h2 id=\"結語：請不要被錯誤的框架限制住\"><a href=\"#結語：請不要被錯誤的框架限制住\" class=\"headerlink\" title=\"結語：請不要被錯誤的框架限制住\"></a>結語：請不要被錯誤的框架限制住</h2><p>如果你正考慮是否要走入資訊安全或 IT 領域，請不要被網路上單一形象嚇退。這個產業廣闊多元，<strong>不是每個人都要當工程師或寫出下一個 app 才有價值</strong>。</p>\n<p>你需要的是：</p>\n<ul>\n<li>足夠的動手能力</li>\n<li>開放的學習心態</li>\n<li>明確的目標與方向感</li>\n<li>持續理解這個世界如何運作的熱情</li>\n</ul>\n<p>而這些，其實沒有本科限定、年齡限制、職位限制。</p>\n<hr>\n<p>這是一場學習與轉型的長跑，不是速成競賽。</p>\n","excerpt":"","more":"<h1 id=\"資訊安全／IT-行業不只是程式設計師：從職場實務談技能誤區與學習路線\"><a href=\"#資訊安全／IT-行業不只是程式設計師：從職場實務談技能誤區與學習路線\" class=\"headerlink\" title=\"資訊安全／IT 行業不只是程式設計師：從職場實務談技能誤區與學習路線\"></a>資訊安全／IT 行業不只是程式設計師：從職場實務談技能誤區與學習路線</h1><p>當你打開 Twitter 或其他技術社群媒體時，會發現整個 IT 世界幾乎被「程式設計師」主導。不論是學習 Python、刷 Leetcode、比較框架效能、談職涯發展，整個風向都讓人誤以為：</p>\n<blockquote>\n<p>只要進入 IT 行業，你的未來就是 coding、coding、再 coding。</p>\n</blockquote>\n<p>但這其實是一個非常狹隘的理解，特別是在資訊安全（Cybersecurity）或系統工程等領域。作為長年在這產業裡工作的人，我想談談：<strong>真正的 IT 現場，跟網路想像的差異，以及我們該怎麼規劃自己的學習與成長路線。</strong></p>\n<hr>\n<h2 id=\"1-IT-行業-≠-程式設計師\"><a href=\"#1-IT-行業-≠-程式設計師\" class=\"headerlink\" title=\"1. IT 行業 ≠ 程式設計師\"></a>1. IT 行業 ≠ 程式設計師</h2><p>程式設計師當然是重要的一環，但整個資訊領域遠比寫程式廣得多。</p>\n<p>特別是在<strong>資訊安全</strong>領域，你可能會從事的工作包括：</p>\n<ul>\n<li>分析威脅情資（Threat Intelligence）</li>\n<li>操作 SIEM 工具進行事件調查</li>\n<li>管理與配置雲端安全防護</li>\n<li>進行資安稽核與合規評估</li>\n<li>統整企業風險、制訂防護政策</li>\n<li>設計防禦架構與攻擊模擬</li>\n</ul>\n<p>這些工作需要你具備技術知識沒錯，但更多時候，<strong>你扮演的是決策者、分析師、協調者，而不是每天敲 code 的開發者</strong>。</p>\n<hr>\n<h2 id=\"2-技術能力的重點：廣度為主，深度依職責\"><a href=\"#2-技術能力的重點：廣度為主，深度依職責\" class=\"headerlink\" title=\"2. 技術能力的重點：廣度為主，深度依職責\"></a>2. 技術能力的重點：廣度為主，深度依職責</h2><p>資訊安全領域的「技術」要求，往往不是鑽研到作業系統核心，而是掌握足夠的理解來分析、判斷、設計防護機制。</p>\n<p>你可能需要會：</p>\n<ul>\n<li>讀懂封包，使用 Wireshark 分析異常</li>\n<li>了解基本 Linux 操作與權限管理</li>\n<li>撰寫簡單的 Python 腳本進行自動化</li>\n<li>執行 SQL 查詢找出資料異常</li>\n</ul>\n<p>這些技術是「手能動」、「腦能轉」、「系統能看懂」的技能，不是要你寫出一套完整產品。因此，<strong>技術要實用，要能連接你的分析與解決問題的能力。</strong></p>\n<hr>\n<h2 id=\"3-真正的關鍵能力：系統思維與整合判斷\"><a href=\"#3-真正的關鍵能力：系統思維與整合判斷\" class=\"headerlink\" title=\"3. 真正的關鍵能力：系統思維與整合判斷\"></a>3. 真正的關鍵能力：系統思維與整合判斷</h2><p>一個好的資安人才，最寶貴的能力往往是：</p>\n<ul>\n<li>快速學習與跨領域整合</li>\n<li>看得懂風險如何影響業務流程</li>\n<li>能把技術、流程、政策、人員串起來</li>\n<li>有強烈的 curiosity：為什麼這樣設計？有沒有漏洞？能不能優化？</li>\n</ul>\n<p>這些能力的核心，其實是<strong>系統性思考（systems thinking）</strong>，是能「從上而下」理解整個環境、再用適當的技術工具切入問題解決。</p>\n<hr>\n<h2 id=\"4-你不需要資訊本科，但你需要明確的學習策略\"><a href=\"#4-你不需要資訊本科，但你需要明確的學習策略\" class=\"headerlink\" title=\"4. 你不需要資訊本科，但你需要明確的學習策略\"></a>4. 你不需要資訊本科，但你需要明確的學習策略</h2><p>我常聽到人說：「我不是資工本科，沒辦法學資訊。」這種觀念早就落伍。</p>\n<p>今天的世界充滿了開放資源：</p>\n<ul>\n<li>MIT、Stanford 都公開課程</li>\n<li>有 AI 工具可以輔助學習、解釋程式碼</li>\n<li>有 Coursera、edX、YouTube 上的完整課程與實作教學</li>\n<li>有像 Google Cybersecurity Certificate 這種專為初學者設計的路徑</li>\n</ul>\n<p>你完全可以根據自己的目標，打造一條屬於你自己的「現代資訊本科」學習路線圖。<strong>現在不是資訊科學門檻太高，而是你是否知道自己要什麼。</strong></p>\n<hr>\n<h2 id=\"5-真正的挑戰：動機與持續學習的意願\"><a href=\"#5-真正的挑戰：動機與持續學習的意願\" class=\"headerlink\" title=\"5. 真正的挑戰：動機與持續學習的意願\"></a>5. 真正的挑戰：動機與持續學習的意願</h2><p>但就算工具與資源再多，如果你沒有明確動機，一切都只是起個頭，然後不了了之。</p>\n<p>這也是我觀察到很多人在進入學習狀態時遇到的問題：不是能力不夠，而是<strong>無法連接「我為什麼要學」這件事</strong>。</p>\n<p>學資訊，學科技，不只是為了職業收入，更是為了你能夠：</p>\n<ul>\n<li>更有掌控力地理解這個數位世界</li>\n<li>創造你想要的解決方案</li>\n<li>在 AI 與自動化橫掃的時代中，保有競爭力與獨立性</li>\n</ul>\n<hr>\n<h2 id=\"結語：請不要被錯誤的框架限制住\"><a href=\"#結語：請不要被錯誤的框架限制住\" class=\"headerlink\" title=\"結語：請不要被錯誤的框架限制住\"></a>結語：請不要被錯誤的框架限制住</h2><p>如果你正考慮是否要走入資訊安全或 IT 領域，請不要被網路上單一形象嚇退。這個產業廣闊多元，<strong>不是每個人都要當工程師或寫出下一個 app 才有價值</strong>。</p>\n<p>你需要的是：</p>\n<ul>\n<li>足夠的動手能力</li>\n<li>開放的學習心態</li>\n<li>明確的目標與方向感</li>\n<li>持續理解這個世界如何運作的熱情</li>\n</ul>\n<p>而這些，其實沒有本科限定、年齡限制、職位限制。</p>\n<hr>\n<p>這是一場學習與轉型的長跑，不是速成競賽。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cm9gytonp0000bzrq26ikh2ku","tag_id":"cm9gytonu0001bzrq6uqi4jze","_id":"cm9gytonw0005bzrqbb5k4ntb"},{"post_id":"cm9gytonp0000bzrq26ikh2ku","tag_id":"cm9gytonv0002bzrq6ixgbxwc","_id":"cm9gytonw0006bzrq3cdx0dsf"},{"post_id":"cm9gytonp0000bzrq26ikh2ku","tag_id":"cm9gytonv0003bzrq8zw3fw5j","_id":"cm9gytonw0007bzrq0eowchnm"},{"post_id":"cm9gytonp0000bzrq26ikh2ku","tag_id":"cm9gytonv0004bzrq1wwcdq7c","_id":"cm9gytonw0008bzrqd5r04cql"}],"Tag":[{"name":"資訊安全","_id":"cm9gytonu0001bzrq6uqi4jze"},{"name":"職涯發展","_id":"cm9gytonv0002bzrq6ixgbxwc"},{"name":"技術學習","_id":"cm9gytonv0003bzrq8zw3fw5j"},{"name":"自學","_id":"cm9gytonv0004bzrq1wwcdq7c"}]}}